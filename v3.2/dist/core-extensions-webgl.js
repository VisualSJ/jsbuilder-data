!function(){cc.AtlasNode.WebGLRenderCmd=function(a){cc.Node.WebGLRenderCmd.call(this,a),this._needDraw=!0,this._textureAtlas=null,this._colorUnmodified=cc.color.WHITE,this._colorF32Array=null,this._uniformColor=null};var a=cc.AtlasNode.WebGLRenderCmd.prototype=Object.create(cc.Node.WebGLRenderCmd.prototype);a.constructor=cc.AtlasNode.WebGLRenderCmd,a._updateBlendFunc=function(){var a=this._node;this._textureAtlas.texture.hasPremultipliedAlpha()||(a._blendFunc.src=cc.SRC_ALPHA,a._blendFunc.dst=cc.ONE_MINUS_SRC_ALPHA)},a._updateOpacityModifyRGB=function(){this._node._opacityModifyRGB=this._textureAtlas.texture.hasPremultipliedAlpha()},a.rendering=function(a){var b=a||cc._renderContext,c=this._node;this._shaderProgram.use(),this._shaderProgram._setUniformForMVPMatrixWithMat4(this._stackMatrix),cc.glBlendFunc(c._blendFunc.src,c._blendFunc.dst),this._uniformColor&&this._colorF32Array&&(b.uniform4fv(this._uniformColor,this._colorF32Array),this._textureAtlas.drawNumberOfQuads(c.quadsToDraw,0))},a.initWithTexture=function(a,b,c,d){var e=this._node;e._itemWidth=b,e._itemHeight=c,this._colorUnmodified=cc.color.WHITE,e._opacityModifyRGB=!0,e._blendFunc.src=cc.BLEND_SRC,e._blendFunc.dst=cc.BLEND_DST;var f=e._realColor;return this._colorF32Array=new Float32Array([f.r/255,f.g/255,f.b/255,e._realOpacity/255]),this._textureAtlas=new cc.TextureAtlas,this._textureAtlas.initWithTexture(a,d),this._textureAtlas?(this._updateBlendFunc(),this._updateOpacityModifyRGB(),this._calculateMaxItems(),e.quadsToDraw=d,this._shaderProgram=cc.shaderCache.programForKey(cc.SHADER_POSITION_TEXTURE_UCOLOR),this._uniformColor=cc._renderContext.getUniformLocation(e.shaderProgram.getProgram(),"u_color"),!0):(cc.log(cc._LogInfos.AtlasNode__initWithTexture),!1)},a.setColor=function(a){var b=cc.color(a.r,a.g,a.b),c=this._node;this._colorUnmodified=a;var d=this._displayedOpacity;c._opacityModifyRGB&&(b.r=b.r*d/255,b.g=b.g*d/255,b.b=b.b*d/255),cc.Node.prototype.setColor.call(c,b)},a.setOpacity=function(a){var b=this._node;cc.Node.prototype.setOpacity.call(b,a),b._opacityModifyRGB&&(b.color=this._colorUnmodified)},a._updateColor=function(){var a=this._displayedColor;this._colorF32Array=new Float32Array([a.r/255,a.g/255,a.b/255,this._displayedOpacity/255])},a.getTexture=function(){return this._textureAtlas.texture},a.setTexture=function(a){this._textureAtlas.texture=a,this._updateBlendFunc(),this._updateOpacityModifyRGB()},a._calculateMaxItems=function(){var a=this._node,b=this._textureAtlas.texture,c=b.getContentSize();a._ignoreContentScaleFactor&&(c=b.getContentSizeInPixels()),a._itemsPerColumn=0|c.height/a._itemHeight,a._itemsPerRow=0|c.width/a._itemWidth}}(),cc.DrawingPrimitiveWebGL=cc.Class.extend({_renderContext:null,_initialized:!1,_shader:null,_colorLocation:-1,_colorArray:null,_pointSizeLocation:-1,_pointSize:-1,ctor:function(a){if(null==a&&(a=cc._renderContext),!a instanceof WebGLRenderingContext)throw"Can't initialise DrawingPrimitiveWebGL. context need is WebGLRenderingContext";this._renderContext=a,this._colorArray=new Float32Array([1,1,1,1])},lazy_init:function(){var a=this;a._initialized||(a._shader=cc.shaderCache.programForKey(cc.SHADER_POSITION_UCOLOR),a._colorLocation=a._renderContext.getUniformLocation(a._shader.getProgram(),"u_color"),a._pointSizeLocation=a._renderContext.getUniformLocation(a._shader.getProgram(),"u_pointSize"),a._initialized=!0)},drawInit:function(){this._initialized=!1},drawPoint:function(a){this.lazy_init();var b=this._renderContext;this._shader.use(),this._shader.setUniformForModelViewAndProjectionMatrixWithMat4(),cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION),b.uniform4fv(this._colorLocation,this._colorArray),this._shader.setUniformLocationWith1f(this._pointSizeLocation,this._pointSize);var c=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,c),b.bufferData(b.ARRAY_BUFFER,new Float32Array([a.x,a.y]),b.STATIC_DRAW),b.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,2,b.FLOAT,!1,0,0),b.drawArrays(b.POINTS,0,1),b.deleteBuffer(c),cc.incrementGLDraws(1)},drawPoints:function(a){if(a&&0!=a.length){this.lazy_init();var b=this._renderContext;this._shader.use(),this._shader.setUniformForModelViewAndProjectionMatrixWithMat4(),cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION),b.uniform4fv(this._colorLocation,this._colorArray),this._shader.setUniformLocationWith1f(this._pointSizeLocation,this._pointSize);var c=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,c),b.bufferData(b.ARRAY_BUFFER,this._pointsToTypeArray(a),b.STATIC_DRAW),b.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,2,b.FLOAT,!1,0,0),b.drawArrays(b.POINTS,0,a.length),b.deleteBuffer(c),cc.incrementGLDraws(1)}},_pointsToTypeArray:function(a){for(var b=new Float32Array(2*a.length),c=0;c<a.length;c++)b[2*c]=a[c].x,b[2*c+1]=a[c].y;return b},drawLine:function(a,b){this.lazy_init();var c=this._renderContext;this._shader.use(),this._shader.setUniformForModelViewAndProjectionMatrixWithMat4(),cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION),c.uniform4fv(this._colorLocation,this._colorArray);var d=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,d),c.bufferData(c.ARRAY_BUFFER,this._pointsToTypeArray([a,b]),c.STATIC_DRAW),c.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,2,c.FLOAT,!1,0,0),c.drawArrays(c.LINES,0,2),c.deleteBuffer(d),cc.incrementGLDraws(1)},drawRect:function(a,b){this.drawLine(cc.p(a.x,a.y),cc.p(b.x,a.y)),this.drawLine(cc.p(b.x,a.y),cc.p(b.x,b.y)),this.drawLine(cc.p(b.x,b.y),cc.p(a.x,b.y)),this.drawLine(cc.p(a.x,b.y),cc.p(a.x,a.y))},drawSolidRect:function(a,b,c){var d=[a,cc.p(b.x,a.y),b,cc.p(a.x,b.y)];this.drawSolidPoly(d,4,c)},drawPoly:function(a,b,c){this.lazy_init();var d=this._renderContext;this._shader.use(),this._shader.setUniformForModelViewAndProjectionMatrixWithMat4(),cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION),d.uniform4fv(this._colorLocation,this._colorArray);var e=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,e),d.bufferData(d.ARRAY_BUFFER,this._pointsToTypeArray(a),d.STATIC_DRAW),d.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,2,d.FLOAT,!1,0,0),c?d.drawArrays(d.LINE_LOOP,0,a.length):d.drawArrays(d.LINE_STRIP,0,a.length),d.deleteBuffer(e),cc.incrementGLDraws(1)},drawSolidPoly:function(a,b,c){this.lazy_init(),c&&this.setDrawColor(c.r,c.g,c.b,c.a);var d=this._renderContext;this._shader.use(),this._shader.setUniformForModelViewAndProjectionMatrixWithMat4(),cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION),d.uniform4fv(this._colorLocation,this._colorArray);var e=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,e),d.bufferData(d.ARRAY_BUFFER,this._pointsToTypeArray(a),d.STATIC_DRAW),d.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,2,d.FLOAT,!1,0,0),d.drawArrays(d.TRIANGLE_FAN,0,a.length),d.deleteBuffer(e),cc.incrementGLDraws(1)},drawCircle:function(a,b,c,d,e){this.lazy_init();var f=1;e&&f++;var g=2*Math.PI/d,h=new Float32Array(2*(d+2));if(h){for(var i=0;d>=i;i++){var j=i*g,k=b*Math.cos(j+c)+a.x,l=b*Math.sin(j+c)+a.y;h[2*i]=k,h[2*i+1]=l}h[2*(d+1)]=a.x,h[2*(d+1)+1]=a.y;var m=this._renderContext;this._shader.use(),this._shader.setUniformForModelViewAndProjectionMatrixWithMat4(),cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION),m.uniform4fv(this._colorLocation,this._colorArray);var n=m.createBuffer();m.bindBuffer(m.ARRAY_BUFFER,n),m.bufferData(m.ARRAY_BUFFER,h,m.STATIC_DRAW),m.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,2,m.FLOAT,!1,0,0),m.drawArrays(m.LINE_STRIP,0,d+f),m.deleteBuffer(n),cc.incrementGLDraws(1)}},drawQuadBezier:function(a,b,c,d){this.lazy_init();for(var e=new Float32Array(2*(d+1)),f=0,g=0;d>g;g++)e[2*g]=Math.pow(1-f,2)*a.x+2*(1-f)*f*b.x+f*f*c.x,e[2*g+1]=Math.pow(1-f,2)*a.y+2*(1-f)*f*b.y+f*f*c.y,f+=1/d;e[2*d]=c.x,e[2*d+1]=c.y;var h=this._renderContext;this._shader.use(),this._shader.setUniformForModelViewAndProjectionMatrixWithMat4(),cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION),h.uniform4fv(this._colorLocation,this._colorArray);var i=h.createBuffer();h.bindBuffer(h.ARRAY_BUFFER,i),h.bufferData(h.ARRAY_BUFFER,e,h.STATIC_DRAW),h.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,2,h.FLOAT,!1,0,0),h.drawArrays(h.LINE_STRIP,0,d+1),h.deleteBuffer(i),cc.incrementGLDraws(1)},drawCubicBezier:function(a,b,c,d,e){this.lazy_init();for(var f=new Float32Array(2*(e+1)),g=0,h=0;e>h;h++)f[2*h]=Math.pow(1-g,3)*a.x+3*Math.pow(1-g,2)*g*b.x+3*(1-g)*g*g*c.x+g*g*g*d.x,f[2*h+1]=Math.pow(1-g,3)*a.y+3*Math.pow(1-g,2)*g*b.y+3*(1-g)*g*g*c.y+g*g*g*d.y,g+=1/e;f[2*e]=d.x,f[2*e+1]=d.y;var i=this._renderContext;this._shader.use(),this._shader.setUniformForModelViewAndProjectionMatrixWithMat4(),cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION),i.uniform4fv(this._colorLocation,this._colorArray);var j=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,j),i.bufferData(i.ARRAY_BUFFER,f,i.STATIC_DRAW),i.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,2,i.FLOAT,!1,0,0),i.drawArrays(i.LINE_STRIP,0,e+1),i.deleteBuffer(j),cc.incrementGLDraws(1)},drawCatmullRom:function(a,b){this.drawCardinalSpline(a,.5,b)},drawCardinalSpline:function(a,b,c){this.lazy_init();for(var d,e,f=new Float32Array(2*(c+1)),g=1/a.length,h=0;c+1>h;h++){var i=h/c;1==i?(d=a.length-1,e=1):(d=0|i/g,e=(i-g*d)/g);var j=cc.CardinalSplineAt(cc.getControlPointAt(a,d-1),cc.getControlPointAt(a,d),cc.getControlPointAt(a,d+1),cc.getControlPointAt(a,d+2),b,e);f[2*h]=j.x,f[2*h+1]=j.y}var k=this._renderContext;this._shader.use(),this._shader.setUniformForModelViewAndProjectionMatrixWithMat4(),cc.glEnableVertexAttribs(cc.VERTEX_ATTRIB_FLAG_POSITION),k.uniform4fv(this._colorLocation,this._colorArray);var l=k.createBuffer();k.bindBuffer(k.ARRAY_BUFFER,l),k.bufferData(k.ARRAY_BUFFER,f,k.STATIC_DRAW),k.vertexAttribPointer(cc.VERTEX_ATTRIB_POSITION,2,k.FLOAT,!1,0,0),k.drawArrays(k.LINE_STRIP,0,c+1),k.deleteBuffer(l),cc.incrementGLDraws(1)},setDrawColor:function(a,b,c,d){this._colorArray[0]=a/255,this._colorArray[1]=b/255,this._colorArray[2]=c/255,this._colorArray[3]=d/255},setPointSize:function(a){this._pointSize=a*cc.contentScaleFactor()},setLineWidth:function(a){this._renderContext.lineWidth&&this._renderContext.lineWidth(a)}});